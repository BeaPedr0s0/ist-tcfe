format long e

file=fopen("~/ist-tcfe/t2/data.txt",'r');
t=importdata("~/ist-tcfe/t2/data.txt",'\t',14);

R1=sscanf(char (t(4,1)), "Values: R1 = %f")*1000;
R2=sscanf(char (t(5,1)), "R2 = %e")*1000;
R3=sscanf(char (t(6,1)), "R3 = %e")*1000;
R4=sscanf(char (t(7,1)), "R4 = %e")*1000;
R5=sscanf(char (t(8,1)), "R5 = %e")*1000;
R6=sscanf(char (t(9,1)), "R6 = %e")*1000;
R7=sscanf(char (t(10,1)), "R7 = %e")*1000;
Vs=sscanf(char (t(11,1)), "Vs = %e");
C=sscanf(char (t(12,1)), "C = %e")/1000;
Kb=sscanf(char (t(13,1)), "Kb = %e")/1000;
Kd=sscanf(char (t(14,1)), "Kc = %f")*1000;



%B= char (15,20)
%for i=1:15
%  B(i,:)=fscanf(file, "%f\n")
%endfor
%aux=sscanf (A,'%s %f')
%A=string(t(13,1))
%n=11;
%A=ones(n,1);
%A(1,1)=fscanf(file,'%f')
%for i=1:n
%  A(i,1)=fscanf(file,'%f')
%endfor
%n=6;
%for i=1:n
%  fscanf(file, "\t");  
%endfor

%A=ones(13,2);

%for c=1:6
%  A=fscanf (file, '%s %f')
%endfor

fclose (file);


%Insertion of the resitors' values generated by datagen.py
%R1 = 1.04111259479e3;
%R2 = 2.09945227782e3; 
%R3 = 3.13109125645e3; 
%R4 = 4.11947040212e3; 
%R5 = 3.1155879392e3; 
%R6 = 2.04799381798e3; 
%R7 = 1.02754401839e3;

% Calculation of the inverse of the resistors. Useful to the Node Method
G1=1/R1;
G2=1/R2;
G3=1/R3;
G4=1/R4;
G5=1/R5;
G6=1/R6;
G7=1/R7;

% Insertion of the remaining values generated by datagen.py
Vs = 5.06871572779; 
C = 1.04127523824e-3; 
Kb = 7.28747116393e-3; 
Kd = 8.11568444746e3;


% Insertion of the matrices that will allow us to calculate the voltages of 
% each node by the Node Method
D =[1 0 0 0 0 0 0 0;
    -G1 G1+G2+G3 -G2 0 -G3 0 0 0;
    0 -Kb-G2 G2 0 Kb 0 0 0;
    0 0 0 1 0 0 0 0;
    0 -G3 0 -G4 G3+G4+G5 -G5 -G7 G7;
    0 Kb 0 0 -Kb-G5 G5 0 0;
    0 0 0 -G6 0 0 G6+G7 -G7;
    0 0 0 Kd*G6 -1 0 -Kd*G6 1];

E=[Vs; 0 ; 0; 0 ; 0 ; 0 ; 0; 0];

% D*F=E <=>
F=inv(D)*E;


% Creating a table in the mat folder with the voltages results of the Node Method
printf ("nos_TAB\n");
printf ("V1 = %e \n", F(1));
printf ("V2 = %e \n", F(2));
printf ("V3 = %e \n", F(3));
printf ("V4 = %e \n", F(4));
printf ("V5 = %e \n", F(5));
printf ("V6 = %e \n", F(6));
printf ("V7 = %e \n", F(7));
printf ("V8 = %e \n", F(8));
printf ("nos_END\n");



% Calculation of the currents (also obtained with the Mesh Method)
% With the voltages of the Node Method 
%Ia=(F(2)-F(1))/R1;
%Ib=(F(3)-F(2))/R2;
%Ic=(F(4)-F(7))/R6;


% Creating a table in the mat folder with the calculations above
% Allow us to confirm the results of both methods
%printf ("confirmacao_TAB\n");
%printf ("Ia = %e \n", Ia);
%printf ("Ib = %e \n", Ib);
%printf ("Ic = %e \n", Ic);
%printf ("confirmacao_END\n");